{"version":3,"sources":["animationHandler.js"],"names":["AnimationPlayer","entity","model","clonedScene","SkeletonUtils","clone","gltf","scene","objectRoot","add","mixer","THREE","AnimationMixer","actions","animationName","animationClip","console","warn","Object","values","forEach","action","enabled","clipAction","reset","play","Component","Player","modelData","models","boy","modelSkinedInstance","setActiveAnimation","update","globalValues","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;IAAMA,e;;;;;AACJ,2BAAYC,MAAZ,EAAoBC,KAApB,EAA2B;AAAA;;AAAA;;AACzB,yFAAMD,MAAN;AACA,UAAKC,KAAL,GAAaA,KAAb;AACA,UAAKC,WAAL,GAAmBC,aAAa,CAACC,KAAd,CAAoB,MAAKH,KAAL,CAAWI,IAAX,CAAgBC,KAApC,CAAnB;AACAN,IAAAA,MAAM,CAACO,UAAP,CAAkBC,GAAlB,CAAsB,MAAKN,WAA3B;AACA,UAAKO,KAAL,GAAa,IAAIC,KAAK,CAACC,cAAV,CAAyB,MAAKT,WAA9B,CAAb;AACA,UAAKU,OAAL,GAAe,EAAf;AANyB;AAO1B;;;;uCACkBC,a,EAAe;AAChC,UAAMC,aAAa,GAAG,KAAKb,KAAL,CAAWa,aAAX,CAAyBD,aAAzB,CAAtB;;AACA,UAAI,CAACC,aAAL,EAAoB;AAClBC,QAAAA,OAAO,CAACC,IAAR,CAAa,wDAAb;AACA;AACD;;AACDC,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKN,OAAnB,EAA4BO,OAA5B,CAAoC,UAACC,MAAD,EAAY;AAC9CA,QAAAA,MAAM,CAACC,OAAP,GAAiB,KAAjB;AACD,OAFD;AAGA,UAAMD,MAAM,GAAG,KAAKX,KAAL,CAAWa,UAAX,CAAsBR,aAAtB,CAAf;AACA,WAAKF,OAAL,CAAaC,aAAb,IAA8BO,MAA9B;AACAA,MAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB,CAXgC,CAYhC;;AACAD,MAAAA,MAAM,CAACG,KAAP;AACAH,MAAAA,MAAM,CAACI,IAAP;AACD;;;;EAxB2BC,S;;IA2BxBC,M;;;;;AACJ,kBAAY1B,MAAZ,EAAoBC,KAApB,EAA2B;AAAA;;AAAA;;AACzB,iFAAMD,MAAN;AACA,WAAK2B,SAAL,GAAiBC,MAAM,CAACC,GAAxB;AACA,WAAKC,mBAAL,GAA2B,IAAI/B,eAAJ,CAAoBC,MAApB,EAA4B,OAAK2B,SAAjC,CAA3B;;AACA,WAAKG,mBAAL,CAAyBC,kBAAzB,CAA4C,KAA5C;;AAJyB;AAK1B;;;;6BACQ;AACP,WAAKD,mBAAL,CAAyBrB,KAAzB,CAA+BuB,MAA/B,CAAsCC,YAAY,CAACC,SAAnD;AACD;;;;EATkBT,S","sourcesContent":["class AnimationPlayer extends Component {\r\n  constructor(entity, model) {\r\n    super(entity);\r\n    this.model = model;\r\n    this.clonedScene = SkeletonUtils.clone(this.model.gltf.scene);\r\n    entity.objectRoot.add(this.clonedScene);\r\n    this.mixer = new THREE.AnimationMixer(this.clonedScene);\r\n    this.actions = {};\r\n  }\r\n  setActiveAnimation(animationName) {\r\n    const animationClip = this.model.animationClip[animationName];\r\n    if (!animationClip) {\r\n      console.warn(\"desired animation clip is not found in animations list\");\r\n      return;\r\n    }\r\n    Object.values(this.actions).forEach((action) => {\r\n      action.enabled = false;\r\n    });\r\n    const action = this.mixer.clipAction(animationClip);\r\n    this.actions[animationName] = action;\r\n    action.enabled = true;\r\n    // we are resetting here just to avoid case for the action with completed cycle/loop\r\n    action.reset();\r\n    action.play();\r\n  }\r\n}\r\n\r\nclass Player extends Component {\r\n  constructor(entity, model) {\r\n    super(entity);\r\n    this.modelData = models.boy;\r\n    this.modelSkinedInstance = new AnimationPlayer(entity, this.modelData);\r\n    this.modelSkinedInstance.setActiveAnimation(\"Run\");\r\n  }\r\n  update() {\r\n    this.modelSkinedInstance.mixer.update(globalValues.deltaTime);\r\n  }\r\n}\r\n"],"file":"animationHandler.dev.js"}