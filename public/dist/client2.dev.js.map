{"version":3,"sources":["client2.js"],"names":["main","canvas","document","getElementById","renderer","THREE","WebGLRenderer","scene","Scene","background","Color","windowsWidth","window","innerWidth","windowsHeight","innerHeight","aspect","camera","PerspectiveCamera","position","set","controls","OrbitControls","update","manager","LoadingManager","onLoad","init","models","pig","url","cow","llama","pug","sheep","zebra","horse","knight","gltfLoader","GLTFLoader","model","load","gltf","Object","values","manageAnimation","animationClip","animations","forEach","value","index","name","WorldObjectManger","gameObjects","worldObjectManager","generateHash","string","hash","length","i","char","charCodeAt","GameObject","parent","objectName","components","Array","objectRoot","Object3D","add","ComponentName","component","args","push","Component","entity","componentID","gameObject","SkinInstance","clonedScene","SkeletonUtils","clone","mixter","AnimationMixter","actions","animationName","console","warn","action","clipAction","enabled","reset","play","timeUpdate"],"mappings":";;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,IAAT,GAAgB;AACd,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAf;AACA,MAAMC,QAAQ,GAAG,IAAIC,KAAK,CAACC,aAAV,CAAwB;AAAEL,IAAAA,MAAM,EAANA;AAAF,GAAxB,CAAjB;AAEA,MAAMM,KAAK,GAAG,IAAIF,KAAK,CAACG,KAAV,EAAd;AACAD,EAAAA,KAAK,CAACE,UAAN,GAAmB,IAAIJ,KAAK,CAACK,KAAV,CAAgB,SAAhB,CAAnB;AAEA,MAAMC,YAAY,GAAGC,MAAM,CAACC,UAA5B;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,WAA7B;AAEA,MAAMC,MAAM,GAAGL,YAAY,GAAGG,aAA9B;AACA,MAAIG,MAAM,GAAG,IAAIZ,KAAK,CAACa,iBAAV,CAA4B,EAA5B,EAAgCF,MAAhC,EAAwC,GAAxC,EAA6C,KAA7C,CAAb;AACAC,EAAAA,MAAM,CAACE,QAAP,CAAgBC,GAAhB,CAAoB,CAApB,EAAuB,GAAvB,EAA4B,EAA5B;AAEA,MAAMC,QAAQ,GAAG,IAAIC,4BAAJ,CAAkBL,MAAlB,EAA0BhB,MAA1B,CAAjB;AACAoB,EAAAA,QAAQ,CAACE,MAAT;AAEA,MAAMC,OAAO,GAAG,IAAInB,KAAK,CAACoB,cAAV,EAAhB;AACAD,EAAAA,OAAO,CAACE,MAAR,GAAiBC,IAAjB;AAEA,MAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAE;AACHC,MAAAA,GAAG,EAAE;AADF,KADQ;AAIbC,IAAAA,GAAG,EAAE;AACHD,MAAAA,GAAG,EAAE;AADF,KAJQ;AAObE,IAAAA,KAAK,EAAE;AACLF,MAAAA,GAAG,EAAE;AADA,KAPM;AAUbG,IAAAA,GAAG,EAAE;AACHH,MAAAA,GAAG,EAAE;AADF,KAVQ;AAabI,IAAAA,KAAK,EAAE;AACLJ,MAAAA,GAAG,EAAE;AADA,KAbM;AAgBbK,IAAAA,KAAK,EAAE;AACLL,MAAAA,GAAG,EAAE;AADA,KAhBM;AAmBbM,IAAAA,KAAK,EAAE;AACLN,MAAAA,GAAG,EAAE;AADA,KAnBM;AAsBbO,IAAAA,MAAM,EAAE;AACNP,MAAAA,GAAG,EAAE;AADC;AAtBK,GAAf;AA2BA,MAAIQ,UAAU,GAAG,IAAIC,sBAAJ,CAAef,OAAf,CAAjB;;AA/Cc;AAgDT,QAAIgB,KAAK,qBAAT;AACHF,IAAAA,UAAU,CAACG,IAAX,CAAgBD,KAAK,CAACV,GAAtB,EAA2B,UAACY,IAAD,EAAU;AACnCF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACD,KAFD;AAjDY;;AAgDd,oCAAkBC,MAAM,CAACC,MAAP,CAAchB,MAAd,CAAlB,oCAAyC;AAAA;AAIxC;;AAED,WAASiB,eAAT,GAA2B;AAAA;AACpB,UAAML,KAAK,uBAAX;AACHA,MAAAA,KAAK,CAACM,aAAN,GAAsB,EAAtB;AACAN,MAAAA,KAAK,CAACE,IAAN,CAAWK,UAAX,CAAsBC,OAAtB,CAA8B,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC9CV,QAAAA,KAAK,CAACM,aAAN,CAAoBG,KAAK,CAACE,IAA1B,IAAkCX,KAAK,CAACE,IAAN,CAAWK,UAAX,CAAsBG,KAAtB,CAAlC;AACD,OAFD;AAHuB;;AACzB,wCAAoBP,MAAM,CAACC,MAAP,CAAchB,MAAd,CAApB,uCAA2C;AAAA;AAK1C;AACF;;AA7Da,MA+DRwB,iBA/DQ;AAAA;AAAA;AAgEZ,iCAAc;AAAA;;AACZ,WAAKC,WAAL,GAAmB,EAAnB;AACD;;AAlEW;AAAA;AAAA,yCAmEO,CAAE;AAnET;AAAA;AAAA,yCAoEO,CAAE;AApET;AAAA;AAAA,+BAqEH,CAAE;AArEC;;AAAA;AAAA;;AAwEd,MAAMC,kBAAkB,GAAG,IAAIF,iBAAJ,EAA3B;;AAEA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,QAAIC,IAAI,GAAG,CAAX;AACA,QAAID,MAAM,CAACE,MAAP,IAAiB,CAArB,EAAwB,OAAOD,IAAP;;AACxB,SAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,MAAM,CAACE,MAAvB,EAA+BC,CAAC,EAAhC,EAAoC;AAClCC,MAAAA,IAAI,GAAGJ,MAAM,CAACK,UAAP,CAAkBF,CAAlB,CAAP;AACAF,MAAAA,IAAI,GAAG,CAACA,IAAI,IAAI,CAAT,IAAcA,IAAd,GAAqBG,IAA5B;AACAH,MAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAd;AACD;;AACD,WAAOA,IAAP;AACD,GATD;;AA1Ec,MAqFRK,UArFQ;AAAA;AAAA;AAsFZ,wBAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAAA;;AAC9B,WAAKb,IAAL,GAAYa,UAAZ;AACA,WAAKC,UAAL,GAAkB,IAAIC,KAAJ,EAAlB;AACA,WAAKC,UAAL,GAAkB,IAAI9D,KAAK,CAAC+D,QAAV,EAAlB;AACAL,MAAAA,MAAM,CAACM,GAAP,CAAW,KAAKF,UAAhB;AACD;;AA3FW;AAAA;AAAA,8BA6FJG,aA7FI,EA6FW;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,YAAMC,SAAS,cAAOD,aAAP,GAAqB,IAArB,4BAA8BE,IAA9B,GAAf;;AACA,aAAKP,UAAL,CAAgBQ,IAAhB,CAAqBF,SAArB;AACA,eAAOA,SAAP;AACD;AA1GW;AAAA;AAAA,qCA4GG,CAAE;AA5GL;AAAA;AAAA,wCA8GM,CAAE;AA9GR;AAAA;AAAA,+BAgHH;AACP,aAAKN,UAAL,CAAgBjB,OAAhB,CAAwB,UAACuB,SAAD,EAAe;AACrCA,UAAAA,SAAS,CAAChD,MAAV;AACD,SAFD;AAGD;AApHW;;AAAA;AAAA;;AAAA,MAuHRmD,SAvHQ,GAwHZ,mBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKC,WAAL,GAAmBrB,YAAY,CAACC,MAAD,CAA/B;AACA,SAAKqB,UAAL,GAAkBF,MAAlB;AACD,GA3HW;;AAAA,MA8HRG,YA9HQ;AAAA;AAAA;AAAA;;AA+HZ,0BAAYH,MAAZ,EAAoBnC,KAApB,EAA2B;AAAA;;AAAA;;AACzB,wFAAMmC,MAAN;AACA,YAAKnC,KAAL,GAAaA,KAAb;AACA,YAAKuC,WAAL,GAAmBC,aAAa,CAACC,KAAd,CAAoB,MAAKzC,KAAL,CAAWE,IAAX,CAAgBnC,KAApC,CAAnB;AACA,YAAK2E,MAAL,GAAc,IAAI7E,KAAK,CAAC8E,eAAV,CAA0B,MAAKJ,WAA/B,CAAd;AACAJ,MAAAA,MAAM,CAACR,UAAP,CAAkBE,GAAlB,CAAsB,MAAKU,WAA3B;AACA,YAAKK,OAAL,GAAe,EAAf;AANyB;AAO1B;;AAtIW;AAAA;AAAA,yCAuIOC,aAvIP,EAuIsB;AAChC,YAAMvC,aAAa,GAAG,KAAKN,KAAL,CAAWO,UAAX,CAAsBsC,aAAtB,CAAtB;;AACA,YAAI,CAACvC,aAAL,EAAoB;AAClBwC,UAAAA,OAAO,CAACC,IAAR,CAAa,wDAAb;AACA;AACD;;AACD,YAAMC,MAAM,GAAG,KAAKN,MAAL,CAAYO,UAAZ,CAAuB3C,aAAvB,CAAf;AACA,aAAKsC,OAAL,CAAaC,aAAb,IAA8BG,MAA9B;AACA7C,QAAAA,MAAM,CAACC,MAAP,CAAcwC,OAAd,EAAuBpC,OAAvB,CAA+B,UAACwC,MAAD,EAAY;AACzCA,UAAAA,MAAM,CAACE,OAAP,GAAiB,KAAjB;AACD,SAFD;AAGAF,QAAAA,MAAM,CAACE,OAAP,GAAiB,IAAjB;AACAF,QAAAA,MAAM,CAACG,KAAP;AACAH,QAAAA,MAAM,CAACI,IAAP;AACD;AArJW;AAAA;AAAA,+BAsJH;AACP,aAAKV,MAAL,CAAY3D,MAAZ,CAAmBsE,UAAnB;AACD;AAxJW;;AAAA;AAAA,IA8HanB,SA9Hb;;AA0Jd,WAAS/C,IAAT,GAAgB;AACdkB,IAAAA,eAAe;AAEf,QAAMgC,UAAU,GAAG,IAAIzB,iBAAJ,EAAnB;AACD;AACF;;AAEDpD,IAAI","sourcesContent":["import * as THREE from \"https://cdn.skypack.dev/three@0.128.0/build/three.module.js\";\r\nimport { OrbitControls } from \"https://cdn.skypack.dev/three@0.128.0/examples/jsm/controls/OrbitControls.js\";\r\nimport { GLTFLoader } from \"https://cdn.skypack.dev/three/examples/jsm/loaders/GLTFLoader.js\";\r\n\r\nfunction main() {\r\n  const canvas = document.getElementById(\"main-canvas\");\r\n  const renderer = new THREE.WebGLRenderer({ canvas });\r\n\r\n  const scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(\"#aaaaaa\");\r\n\r\n  const windowsWidth = window.innerWidth;\r\n  const windowsHeight = window.innerHeight;\r\n\r\n  const aspect = windowsWidth / windowsHeight;\r\n  let camera = new THREE.PerspectiveCamera(90, aspect, 0.1, 40000);\r\n  camera.position.set(0, 1.5, 20);\r\n\r\n  const controls = new OrbitControls(camera, canvas);\r\n  controls.update();\r\n\r\n  const manager = new THREE.LoadingManager();\r\n  manager.onLoad = init;\r\n\r\n  const models = {\r\n    pig: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Pig.gltf\",\r\n    },\r\n    cow: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Cow.gltf\",\r\n    },\r\n    llama: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Llama.gltf\",\r\n    },\r\n    pug: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Pug.gltf\",\r\n    },\r\n    sheep: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Sheep.gltf\",\r\n    },\r\n    zebra: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Zebra.gltf\",\r\n    },\r\n    horse: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Horse.gltf\",\r\n    },\r\n    knight: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/knight/KnightCharacter.gltf\",\r\n    },\r\n  };\r\n\r\n  let gltfLoader = new GLTFLoader(manager);\r\n  for (let model of Object.values(models)) {\r\n    gltfLoader.load(model.url, (gltf) => {\r\n      model.gltf = gltf;\r\n    });\r\n  }\r\n\r\n  function manageAnimation() {\r\n    for (const model of Object.values(models)) {\r\n      model.animationClip = {};\r\n      model.gltf.animations.forEach((value, index) => {\r\n        model.animationClip[value.name] = model.gltf.animations[index];\r\n      });\r\n    }\r\n  }\r\n\r\n  class WorldObjectManger {\r\n    constructor() {\r\n      this.gameObjects = [];\r\n    }\r\n    createGameObject() {}\r\n    removeGameObject() {}\r\n    update() {}\r\n  }\r\n\r\n  const worldObjectManager = new WorldObjectManger();\r\n\r\n  const generateHash = (string) => {\r\n    var hash = 0;\r\n    if (string.length == 0) return hash;\r\n    for (i = 0; i < string.length; i++) {\r\n      char = string.charCodeAt(i);\r\n      hash = (hash << 5) - hash + char;\r\n      hash = hash & hash;\r\n    }\r\n    return hash;\r\n  };\r\n\r\n  class GameObject {\r\n    constructor(parent, objectName) {\r\n      this.name = objectName;\r\n      this.components = new Array();\r\n      this.objectRoot = new THREE.Object3D();\r\n      parent.add(this.objectRoot);\r\n    }\r\n\r\n    addComp(ComponentName) {\r\n      // create component in advance and pass\r\n      // if (!component.componentID) {\r\n      //   console.warn(\"this is not an instance of component\");\r\n      //   return this;\r\n      // }\r\n      // component.entity = this;\r\n      // this.componenets[componentName] = component;\r\n      // return this;\r\n\r\n      const component = new ComponentName(this, ...args);\r\n      this.components.push(component);\r\n      return component;\r\n    }\r\n\r\n    getComponent() {}\r\n\r\n    removeComponent() {}\r\n\r\n    update() {\r\n      this.components.forEach((component) => {\r\n        component.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  class Component {\r\n    constructor(entity) {\r\n      this.componentID = generateHash(string);\r\n      this.gameObject = entity;\r\n    }\r\n  }\r\n\r\n  class SkinInstance extends Component {\r\n    constructor(entity, model) {\r\n      super(entity);\r\n      this.model = model;\r\n      this.clonedScene = SkeletonUtils.clone(this.model.gltf.scene);\r\n      this.mixter = new THREE.AnimationMixter(this.clonedScene);\r\n      entity.objectRoot.add(this.clonedScene);\r\n      this.actions = {};\r\n    }\r\n    setActiveAnimation(animationName) {\r\n      const animationClip = this.model.animations[animationName];\r\n      if (!animationClip) {\r\n        console.warn(\"desired animation clip is not found in animations list\");\r\n        return;\r\n      }\r\n      const action = this.mixter.clipAction(animationClip);\r\n      this.actions[animationName] = action;\r\n      Object.values(actions).forEach((action) => {\r\n        action.enabled = false;\r\n      });\r\n      action.enabled = true;\r\n      action.reset();\r\n      action.play();\r\n    }\r\n    update() {\r\n      this.mixter.update(timeUpdate);\r\n    }\r\n  }\r\n  function init() {\r\n    manageAnimation();\r\n\r\n    const gameObject = new WorldObjectManger();\r\n  }\r\n}\r\n\r\nmain();\r\n"],"file":"client2.dev.js"}