{"version":3,"sources":["client2.js"],"names":["main","canvas","document","getElementById","renderer","THREE","WebGLRenderer","scene","Scene","background","Color","loaderElement","getElementsByClassName","ambientLight","AmbientLight","add","dirLight","DirectionalLight","position","set","windowsWidth","window","innerWidth","windowsHeight","innerHeight","aspect","camera","PerspectiveCamera","controls","OrbitControls","update","globalValues","time","deltaTime","manager","LoadingManager","onLoad","initialize","models","boy","url","gltfLoader","GLTFLoader","model","load","gltf","Object","values","manageAnimation","animationClip","animations","forEach","value","index","name","WorldObjectManger","gameObjects","removeQueque","addQueque","parentObject","gameObject","GameObject","push","length","updateQueue","worldObjectManager","generateHash","string","hash","i","char","charCodeAt","parent","objectName","components","Array","objectRoot","Object3D","ComponentName","args","component","Component","entity","AnimationPlayer","clonedScene","SkeletonUtils","clone","mixer","AnimationMixer","actions","animationName","console","warn","action","enabled","clipAction","reset","play","Player","modelData","modelSkinedInstance","setActiveAnimation","gameObjectManager","style","display","playerObject","createGameObject","addComp","draw","resizeRendererToDisplaySize","domElement","width","clientWidth","height","clientHeight","hasChanged","setSize","clock","Clock","now","delta","getDelta","updateProjectionMatrix","render","requestAnimationFrame"],"mappings":"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","sourcesContent":["import * as THREE from \"https://cdn.skypack.dev/three@0.128.0/build/three.module.js\";\r\nimport { OrbitControls } from \"https://cdn.skypack.dev/three@0.128.0/examples/jsm/controls/OrbitControls.js\";\r\nimport { GLTFLoader } from \"https://cdn.skypack.dev/three@0.128.0/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { SkeletonUtils } from \"https://cdn.skypack.dev/three@0.129.0/examples/jsm/utils/SkeletonUtils.js\";\r\n\r\nfunction main() {\r\n  const canvas = document.getElementById(\"main-canvas\");\r\n  const renderer = new THREE.WebGLRenderer({ canvas });\r\n\r\n  const scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(\"#aaaaaa\");\r\n\r\n  let loaderElement = document.getElementsByClassName(\"loader\")[0];\r\n\r\n  {\r\n    const ambientLight = new THREE.AmbientLight(0xaaaaaa);\r\n    scene.add(ambientLight);\r\n\r\n    const dirLight = new THREE.DirectionalLight(0xffffff);\r\n    dirLight.position.set(0, 200, 100);\r\n    scene.add(dirLight);\r\n  }\r\n\r\n  const windowsWidth = window.innerWidth;\r\n  const windowsHeight = window.innerHeight;\r\n\r\n  const aspect = windowsWidth / windowsHeight;\r\n  let camera = new THREE.PerspectiveCamera(90, aspect, 0.1, 40000);\r\n  camera.position.set(0, 1.5, 20);\r\n\r\n  const controls = new OrbitControls(camera, canvas);\r\n  controls.update();\r\n\r\n  const globalValues = {\r\n    time: 0,\r\n    deltaTime: 0,\r\n  };\r\n\r\n  const manager = new THREE.LoadingManager();\r\n  manager.onLoad = initialize;\r\n\r\n  const models = {\r\n    boy: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/knight/KnightCharacter.gltf\",\r\n    },\r\n  };\r\n\r\n  let gltfLoader = new GLTFLoader(manager);\r\n  for (let model of Object.values(models)) {\r\n    gltfLoader.load(model.url, (gltf) => {\r\n      model.gltf = gltf;\r\n    });\r\n  }\r\n\r\n  function manageAnimation() {\r\n    for (const model of Object.values(models)) {\r\n      model.animationClip = {};\r\n      model.gltf.animations.forEach((value, index) => {\r\n        model.animationClip[value.name] = model.gltf.animations[index];\r\n      });\r\n    }\r\n  }\r\n\r\n  // this is logic of @gregman to store the added and removed gameobject\r\n  // in queue rather than updating at the same instance to avoid runtime crash\r\n\r\n  class WorldObjectManger {\r\n    constructor() {\r\n      this.gameObjects = [];\r\n      this.removeQueque = {};\r\n      this.addQueque = [];\r\n    }\r\n    createGameObject(parentObject, name) {\r\n      this.gameObject = new GameObject(parentObject, name);\r\n      this.gameObjects.push(this.gameObject);\r\n      return this.gameObject;\r\n    }\r\n\r\n    removeGameObject(gameObject) {\r\n      this.removeQueque.add(gameObject);\r\n    }\r\n\r\n    updateQueue() {\r\n      if (this.removeQueque.length > 0) {\r\n        // logic to remove an element, need efficient way to remove an object by comparing\r\n        this.removeQueque = [];\r\n      }\r\n      if (this.addQueque.length > 0) {\r\n        this.gameObjects.push(...this.addQueque);\r\n        this.addQueque = [];\r\n      }\r\n    }\r\n\r\n    update() {\r\n      this.updateQueue();\r\n      this.gameObjects.forEach((gameObject) => {\r\n        gameObject.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  const worldObjectManager = new WorldObjectManger();\r\n\r\n  const generateHash = (string) => {\r\n    var hash = 0;\r\n    if (string.length == 0) return hash;\r\n    for (i = 0; i < string.length; i++) {\r\n      char = string.charCodeAt(i);\r\n      hash = (hash << 5) - hash + char;\r\n      hash = hash & hash;\r\n    }\r\n    return hash;\r\n  };\r\n\r\n  class GameObject {\r\n    constructor(parent, objectName) {\r\n      this.name = objectName;\r\n      this.components = new Array();\r\n      this.objectRoot = new THREE.Object3D();\r\n      parent.add(this.objectRoot);\r\n    }\r\n\r\n    addComp(ComponentName, ...args) {\r\n      // create component in advance and pass\r\n      // if (!component.componentID) {\r\n      //   console.warn(\"this is not an instance of component\");\r\n      //   return this;\r\n      // }\r\n      // component.entity = this;\r\n      // this.componenets[componentName] = component;\r\n      // return this;\r\n\r\n      const component = new ComponentName(this, ...args);\r\n      this.components.push(component);\r\n      return component;\r\n    }\r\n\r\n    getComponent() {}\r\n\r\n    removeComponent() {}\r\n\r\n    update() {\r\n      this.components.forEach((component) => {\r\n        component.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  class Component {\r\n    constructor(entity) {\r\n      // this.componentID = generateHash(string);\r\n      this.gameObject = entity;\r\n    }\r\n  }\r\n\r\n  class AnimationPlayer extends Component {\r\n    constructor(entity, model) {\r\n      super(entity);\r\n      this.model = model;\r\n      this.clonedScene = SkeletonUtils.clone(this.model.gltf.scene);\r\n      entity.objectRoot.add(this.clonedScene);\r\n      this.mixer = new THREE.AnimationMixer(this.clonedScene);\r\n      this.actions = {};\r\n    }\r\n    setActiveAnimation(animationName) {\r\n      const animationClip = this.model.animationClip[animationName];\r\n      if (!animationClip) {\r\n        console.warn(\"desired animation clip is not found in animations list\");\r\n        return;\r\n      }\r\n      Object.values(this.actions).forEach((action) => {\r\n        action.enabled = false;\r\n      });\r\n      const action = this.mixer.clipAction(animationClip);\r\n      this.actions[animationName] = action;\r\n      action.enabled = true;\r\n      // we are resetting here just to avoid case for the action with completed cycle/loop\r\n      action.reset();\r\n      action.play();\r\n    }\r\n  }\r\n\r\n  class Player extends Component {\r\n    constructor(entity, model) {\r\n      super(entity);\r\n      this.modelData = models.boy;\r\n      this.modelSkinedInstance = new AnimationPlayer(entity, this.modelData);\r\n      this.modelSkinedInstance.setActiveAnimation(\"Run\");\r\n    }\r\n    update() {\r\n      this.modelSkinedInstance.mixer.update(globalValues.deltaTime);\r\n    }\r\n  }\r\n\r\n  const gameObjectManager = new WorldObjectManger();\r\n\r\n  function initialize() {\r\n    loaderElement.style.display = \"none\";\r\n    manageAnimation();\r\n    const playerObject = gameObjectManager.createGameObject(scene, \"player\");\r\n    playerObject.addComp(Player);\r\n    draw();\r\n  }\r\n\r\n  function resizeRendererToDisplaySize(renderer) {\r\n    const canvas = renderer.domElement;\r\n    const width = canvas.clientWidth;\r\n    const height = canvas.clientHeight;\r\n    const hasChanged = canvas.width !== width || canvas.height !== height;\r\n    if (hasChanged) {\r\n      renderer.setSize(width, height, false);\r\n    }\r\n    return hasChanged;\r\n  }\r\n\r\n  let clock = new THREE.Clock();\r\n\r\n  function draw(now) {\r\n    const delta = clock.getDelta();\r\n    globalValues.deltaTime = delta;\r\n    if (resizeRendererToDisplaySize(renderer)) {\r\n      const canvas = renderer.domElement;\r\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n      camera.updateProjectionMatrix();\r\n    }\r\n    gameObjectManager.update();\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(draw);\r\n  }\r\n}\r\n\r\nmain();\r\n"],"file":"client2.dev.js"}