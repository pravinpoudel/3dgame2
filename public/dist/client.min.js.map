{"version":3,"sources":["client.js"],"names":["GameEngine","scene","renderer","camera","_classCallCheck","this","runGameLoop","_this","updateGame","updatePhysics","render","requestAnimationFrame","update","Scene","width","height","gameObjects","createScene","THREE","skybox","cubeTexture","light","add","gameObject","model","forEach","Renderer","createRenderer","setupSize","enableShadowMap","addToDocument","setSize","enabled","WebGLRenderer","antialias","document","body","appendChild","domElement","background","toneMappingExposure","exposure","Skybox","images","push","setPath","path","load","GameObject","Car","_this2","speed","direction","x","y","z","angle","windowsWidth","window","innerWidth","windowsHeight","innerHeight","addSkyBoxToScene","addHemiLight","hemiLight","HemisphereLight","addLight","addSpotLight","spotLight1","SpotLight","castShadow","toneMapping","shadow","mapSize","addLightToScene","createCamera","aspect","PerspectiveCamera","position","set","OrbitControls","addModelToScene","result","children","traverse","object1","isMesh","receiveShadow","material","map","anisotropy","car","CarInputController","addGameObject","setupToneMappingWithExposure","_this3","mouseSensitivity","KeyboardInputHandler","state","MouseInputHandler","listenMouseMovement","KeyState","DOWN","key","Keys","LEFT","setupCameraControl","control","moveDown","moveRight","GLTFLoader","listener","setupMouseMoveListener","lockPointer","self","onmousemove","mouseEvent","movementX","movementY","onmousedown","requestPointerLock","RIGHT","UP","listner","setupKeyUpListener","setupKeyDownListener","onkeyup","keyEvent","onkeydown","main","run"],"mappings":"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","file":"client.min.js","sourcesContent":["class GameEngine {\r\n  constructor(scene, renderer, camera) {\r\n    this.scene = scene;\r\n    this.renderer = renderer;\r\n    this.camera = camera;\r\n  }\r\n\r\n  run() {\r\n    this.runGameLoop();\r\n  }\r\n\r\n  runGameLoop() {\r\n    this.updateGame();\r\n    this.updatePhysics();\r\n    this.render();\r\n    requestAnimationFrame(() => this.runGameLoop());\r\n  }\r\n\r\n  updateGame() {\r\n    this.scene.update();\r\n  }\r\n\r\n  updatePhysics() {}\r\n\r\n  render() {\r\n    this.renderer.render(this.scene.scene, this.camera);\r\n  }\r\n}\r\n\r\nclass Scene {\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.gameObjects = [];\r\n    this.createScene();\r\n  }\r\n\r\n  createScene() {\r\n    this.scene = new THREE.Scene();\r\n  }\r\n\r\n  addSkyBox(skybox) {\r\n    this.scene.background = skybox.cubeTexture;\r\n  }\r\n\r\n  addLight(light) {\r\n    this.scene.add(light);\r\n  }\r\n\r\n  addGameObject(gameObject) {\r\n    this.scene.add(gameObject.model);\r\n    this.gameObjects.push(gameObject);\r\n  }\r\n\r\n  update() {\r\n    this.gameObjects.forEach((gameObject) => {\r\n      gameObject.update();\r\n    });\r\n  }\r\n}\r\n\r\nclass Renderer {\r\n  constructor(width, height) {\r\n    this.createRenderer();\r\n    this.setupSize(width, height);\r\n    this.enableShadowMap();\r\n    this.addToDocument();\r\n  }\r\n\r\n  setupSize(width, height) {\r\n    this.renderer.setSize(width, height);\r\n  }\r\n\r\n  enableShadowMap() {\r\n    this.renderer.shadowMap.enabled = true;\r\n  }\r\n\r\n  createRenderer() {\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  }\r\n\r\n  addToDocument() {\r\n    document.body.appendChild(this.renderer.domElement);\r\n  }\r\n\r\n  setupToneMappingWithExposure(exposure) {\r\n    this.renderer.toneMapping = THREE.ReinhardToneMapping;\r\n    this.renderer.toneMappingExposure = exposure;\r\n  }\r\n\r\n  render(scene, camera) {\r\n    this.renderer.render(scene, camera);\r\n  }\r\n}\r\n\r\nclass Skybox {\r\n  constructor(path, images) {\r\n    this.cubeTexture = new THREE.CubeTextureLoader().setPath(path).load(images);\r\n  }\r\n}\r\n\r\nclass GameObject {\r\n  constructor(model) {\r\n    this.model = model;\r\n  }\r\n\r\n  update() {}\r\n}\r\n\r\nclass Car extends GameObject {\r\n  constructor(model) {\r\n    super(model);\r\n    this.speed = 1;\r\n    this.direction = { x: 0, y: 0, z: 0 };\r\n    this.angle = { z: 0 };\r\n  }\r\n\r\n  update() {\r\n    this.model.translateOnAxis(this.direction, this.speed);\r\n    this.model.rotation.z = this.angle.z;\r\n  }\r\n}\r\n\r\nconst windowsWidth = window.innerWidth;\r\nconst windowsHeight = window.innerHeight;\r\n\r\nfunction addSkyBoxToScene(scene) {\r\n  let path = \"images/skybox1/greenery/\";\r\n  let images = [\r\n    \"meadow_ft.jpg\",\r\n    \"meadow_bk.jpg\",\r\n    \"meadow_up.jpg\",\r\n    \"meadow_dn.jpg\",\r\n    \"meadow_rt.jpg\",\r\n    \"meadow_lf.jpg\",\r\n  ];\r\n  let skybox = new Skybox(path, images);\r\n  scene.addSkyBox(skybox);\r\n}\r\n\r\nfunction addHemiLight(scene) {\r\n  const hemiLight = new THREE.HemisphereLight(0xffff33, 0x5b573d, 2.5);\r\n  scene.addLight(hemiLight);\r\n}\r\n\r\nfunction addSpotLight(scene) {\r\n  const spotLight1 = new THREE.SpotLight(0xffffff, 3);\r\n  spotLight1.castShadow = true;\r\n  spotLight1.shadow.bias = -0.0001;\r\n  spotLight1.shadow.mapSize.width = 4096;\r\n  spotLight1.shadow.mapSize.height = 4096;\r\n  scene.addLight(spotLight1);\r\n}\r\n\r\nfunction addLightToScene(scene) {\r\n  addHemiLight(scene);\r\n  addSpotLight(scene);\r\n}\r\n\r\nfunction createCamera() {\r\n  const aspect = windowsWidth / windowsHeight;\r\n  let camera = new THREE.PerspectiveCamera(90, aspect, 0.1, 40000);\r\n  camera.position.set(4, 4, 20);\r\n\r\n  return camera;\r\n}\r\n\r\nfunction setupCameraControl(camera, renderer) {\r\n  let control = new THREE.OrbitControls(camera, renderer.renderer.domElement);\r\n  control.update();\r\n}\r\n\r\nfunction addModelToScene(scene) {\r\n  new THREE.GLTFLoader().load(\"models/house/scene.gltf\", (result) => {\r\n    let model = result.scene.children[0];\r\n    model.position.set(0.0, 0.0, 0.0);\r\n    model.traverse((object1) => {\r\n      if (object1.isMesh) {\r\n        object1.castShadow = true;\r\n        object1.receiveShadow = true;\r\n\r\n        if (object1.material.map) {\r\n          object1.material.map.anisotropy = 16;\r\n        }\r\n      }\r\n    });\r\n    let car = new Car(model);\r\n    let controller = new CarInputController(car);\r\n    scene.addGameObject(car);\r\n  });\r\n}\r\n\r\nfunction createRenderer() {\r\n  let renderer = new Renderer(windowsWidth, windowsHeight);\r\n  renderer.setupToneMappingWithExposure(2);\r\n  return renderer;\r\n}\r\n\r\nfunction createScene() {\r\n  let scene = new Scene(windowsWidth, windowsHeight);\r\n  addLightToScene(scene);\r\n  addSkyBoxToScene(scene);\r\n  addModelToScene(scene);\r\n  return scene;\r\n}\r\n\r\nclass CarInputController {\r\n  constructor(car) {\r\n    this.mouseSensitivity = 200;\r\n    this.car = car;\r\n    let k = new KeyboardInputHandler((key, state) =>\r\n      this.listenKeyEvent(key, state)\r\n    );\r\n    let m = new MouseInputHandler((x, y) => this.listenMouseMovement(x, y));\r\n  }\r\n\r\n  listenMouseMovement(x, y) {\r\n    this.car.angle.z += x / this.mouseSensitivity;\r\n  }\r\n\r\n  moveLeft(state) {\r\n    if (state == KeyState.DOWN) {\r\n      this.car.direction.x = -1;\r\n    } else if (this.car.direction.x == -1) {\r\n      this.car.direction.x = 0;\r\n    }\r\n  }\r\n\r\n  moveRight(state) {\r\n    if (state == KeyState.DOWN) {\r\n      this.car.direction.x = 1;\r\n    } else if (this.car.direction.x == 1) {\r\n      this.car.direction.x = 0;\r\n    }\r\n  }\r\n\r\n  moveDown(state) {\r\n    if (state == KeyState.DOWN) {\r\n      this.car.direction.y = 1;\r\n    } else if (this.car.direction.y == 1) {\r\n      this.car.direction.y = 0;\r\n    }\r\n  }\r\n\r\n  moveUp(state) {\r\n    if (state == KeyState.DOWN) {\r\n      this.car.direction.y = -1;\r\n    } else if (this.car.direction.y == -1) {\r\n      this.car.direction.y = 0;\r\n    }\r\n  }\r\n\r\n  listenKeyEvent(key, state) {\r\n    if (key == Keys.LEFT) {\r\n      this.moveLeft(state);\r\n    }\r\n    if (key == Keys.DOWN) {\r\n      this.moveDown(state);\r\n    }\r\n    if (key == Keys.RIGHT) {\r\n      this.moveRight(state);\r\n    }\r\n    if (key == Keys.UP) {\r\n      this.moveUp(state);\r\n    }\r\n  }\r\n}\r\n\r\nclass MouseInputHandler {\r\n  constructor(listener) {\r\n    this.listener = listener;\r\n    this.setupMouseMoveListener();\r\n    this.lockPointer();\r\n  }\r\n\r\n  setupMouseMoveListener() {\r\n    let self = this;\r\n    document.onmousemove = function (mouseEvent) {\r\n      self.listener(mouseEvent.movementX, mouseEvent.movementY);\r\n    };\r\n  }\r\n\r\n  lockPointer() {\r\n    document.onmousedown = function () {\r\n      document.body.requestPointerLock();\r\n    };\r\n  }\r\n}\r\n\r\nconst Keys = {\r\n  LEFT: \"a\",\r\n  RIGHT: \"d\",\r\n  UP: \"w\",\r\n  DOWN: \"s\",\r\n};\r\n\r\nconst KeyState = {\r\n  UP: 0,\r\n  DOWN: 1,\r\n};\r\n\r\nclass KeyboardInputHandler {\r\n  constructor(listener) {\r\n    this.listner = listener;\r\n    this.setupKeyUpListener();\r\n    this.setupKeyDownListener();\r\n  }\r\n\r\n  setupKeyUpListener() {\r\n    let self = this;\r\n    document.onkeyup = function (keyEvent) {\r\n      self.listner(keyEvent.key, KeyState.UP);\r\n    };\r\n  }\r\n\r\n  setupKeyDownListener() {\r\n    let self = this;\r\n    document.onkeydown = function (keyEvent) {\r\n      self.listner(keyEvent.key, KeyState.DOWN);\r\n    };\r\n  }\r\n}\r\n\r\nfunction main() {\r\n  let renderer = createRenderer();\r\n  let scene = createScene();\r\n  let camera = createCamera();\r\n\r\n  setupCameraControl(camera, renderer);\r\n\r\n  let engine = new GameEngine(scene, renderer, camera);\r\n  engine.run();\r\n}\r\n\r\nmain();\r\n"]}