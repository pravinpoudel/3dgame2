{"version":3,"sources":["client.js"],"names":["THREE","_interopRequireWildcard","require","_OrbitControls","_statsModule","_interopRequireDefault","scene","camera","renderer","url","URL","main","Scene","windowsWidth","window","innerWidth","windowsHeight","innerHeight","WebGLRenderer","antialias","setSize","document","body","domElement","PerspectiveCamera","aspect","z","addEventListener","materialArrays","appendChild","controls","i","texture","TextureLoader","load","map","push","material","geometry","boxGeometry","skyBox","Mesh","add","console","log"],"mappings":"8PAEA,IAAAA,MAAAC,wBAAAC,QAAA,2BACAC,eAAAD,QAAA,kCADAE,aAAAC,uBAAAH,QAAA,qtBAFA,IAGAI,MAAAC,OAAAC,SAHIC,IAAM,IAAIC,IAAI,0BAIlB,SAAAC,OAKEL,MAAQ,IAAIN,MAAMY,MAElB,IAAMC,EAAeC,OAAOC,WACtBC,EAAgBF,OAAOG,aAE7BT,SAAW,IAAIR,MAAMkB,cAAc,CAAEC,WAAW,KACvCC,QAAQP,EAAcG,GAfjCK,SAAUC,KAAIZ,YAAIF,SAAAe,YAMlB,IAAIjB,EAAJO,EAAAG,GAaET,OAAS,IAAIP,MAAMwB,kBAAkB,GAAIC,EAAQ,GAAK,MAX/Cd,SAAOe,EAAA,EAIK,IAAGZ,eAAAA,cAAOG,OAA7BT,SAAAe,YAEQI,iBAAaT,SAAcV,UAuBnC,IAvBmC,IAAnCoB,EAAA,GAEAP,EAAcQ,CAEd,gBACAtB,gBACAA,gBAYE,gBATF,gBACAuB,iBAaSC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAA5B,IAAKC,GAAWD,IAAI/B,MAApBiC,eAA4BC,KAAZH,iCAAAA,OACUE,EAAVF,KAG+BI,EAAKH,IAAAA,MAAAA,kBAAAA,CAAAA,IAAAA,IAAPJ,EAA3CQ,KAAAC,GAIF,IAAMC,EAAW,IAAItC,MAAMuC,YAAY,IAAO,IAAO,KAEjDC,EAAS,IAAIxC,MAAMyC,KAAKH,EAAUV,GACtCtB,MAAMoC,IAAIF,GA/CZG,QAAQC,IAAInC,KAsDZE","file":"client.min.js","sourcesContent":["let url = new URL(\"/build/three.module.js\");\r\nconsole.log(url);\r\nimport * as THREE from \"/build/three.module.js\";\r\nimport { OrbitControls } from \"/jsm/controls/OrbitControls.js\";\r\nimport Stats from \"/jsm/libs/stats.module.js\";\r\n\r\nlet scene, camera, renderer;\r\n\r\nfunction main() {\r\n  scene = new THREE.Scene();\r\n\r\n  const windowsWidth = window.innerWidth;\r\n  const windowsHeight = window.innerHeight;\r\n\r\n  renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  renderer.setSize(windowsWidth, windowsHeight);\r\n  document.body.appendChild(renderer.domElement);\r\n\r\n  const aspect = windowsWidth / windowsHeight;\r\n  camera = new THREE.PerspectiveCamera(90, aspect, 0.1, 1000);\r\n  camera.position.z = 2;\r\n  // camera.position.set(-900, -200, -900);\r\n\r\n  const controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.addEventListener(\"change\", renderer);\r\n\r\n  let materialArrays = [];\r\n\r\n  let textureImages = [\r\n    \"meadow_ft.jpg\",\r\n    \"meadow_bk.jpg\",\r\n    \"meadow_up.jpg\",\r\n    \"meadow_dn.jpg\",\r\n    \"meadow_rt.jpg\",\r\n    \"meadow_lf.jpg\",\r\n  ];\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    let texture = new THREE.TextureLoader().load(\r\n      `../images/skyboxday1/greenery/${textureImages[i]}`\r\n    );\r\n    let material = new THREE.MeshBasicMaterial({ map: texture });\r\n    materialArrays.push(material);\r\n  }\r\n\r\n  const geometry = new THREE.boxGeometry(10000, 10000, 10000);\r\n\r\n  let skyBox = new THREE.Mesh(geometry, materialArrays);\r\n  scene.add(skyBox);\r\n  function draw() {\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(draw);\r\n  }\r\n}\r\n\r\nmain();\r\n"]}