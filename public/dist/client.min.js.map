{"version":3,"sources":["client.js"],"names":["scene","camera","renderer","hemiLight","spotLight","main","THREE","Scene","cubeTexture","CubeTextureLoader","background","load","windowsWidth","windowsHeight","antialias","spotLight1","SpotLight","window","innerHeight","shadow","mapSize","height","shadowMap","toneMappingExposure","domElement","aspect","add","control","OrbitControls","castShadow","bias","width","update","materialArrays","texture_ft","TextureLoader","texture_bk","texture_up","enabled","texture_rt","texture_lf","PerspectiveCamera","set","MeshBasicMaterial","BackSide","map","side","push","geometry","BoxGeometry","result","model","position","isMesh","object1","texture_dn","requestAnimationFrame","Mesh","draw","x","y","z","render","GLTFLoader","children","traverse","receiveShadow","material","anisotropy"],"mappings":"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","file":"client.min.js","sourcesContent":["// import * as THREE from \"/build/three.module.js\";\r\n// import { OrbitControls } from \"../scripts/three/examples/jsm/controls/OrbitControls.js\";\r\n// import Stats from \"/jsm/libs/stats.module.js\";\r\n\r\nlet scene, camera, renderer, hemiLight, spotLight;\r\n\r\nfunction main() {\r\n  scene = new THREE.Scene();\r\n\r\n  let cubeTexture = new THREE.CubeTextureLoader()\r\n    .setPath(\"images/skybox1/greenery/\")\r\n    .load([\r\n      \"meadow_ft.jpg\",\r\n      \"meadow_bk.jpg\",\r\n      \"meadow_up.jpg\",\r\n      \"meadow_dn.jpg\",\r\n      \"meadow_rt.jpg\",\r\n      \"meadow_lf.jpg\",\r\n    ]);\r\n  scene.background = cubeTexture;\r\n\r\n  const windowsWidth = window.innerWidth;\r\n  const windowsHeight = window.innerHeight;\r\n\r\n  renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  renderer.setSize(windowsWidth, windowsHeight);\r\n  renderer.shadowMap.enabled = true;\r\n\r\n  document.body.appendChild(renderer.domElement);\r\n\r\n  const hemiLight = new THREE.HemisphereLight(0xffff33, 0x5b573d, 2.5);\r\n  scene.add(hemiLight);\r\n\r\n  const spotLight1 = new THREE.SpotLight(0xffffff, 3);\r\n  spotLight1.castShadow = true;\r\n  spotLight1.shadow.bias = -0.0001;\r\n  spotLight1.shadow.mapSize.width = 4096;\r\n  spotLight1.shadow.mapSize.height = 4096;\r\n  scene.add(spotLight1);\r\n\r\n  renderer.toneMapping = THREE.ReinhardToneMapping;\r\n  renderer.toneMappingExposure = 2;\r\n  renderer.shadowMap.enabled = true;\r\n\r\n  const aspect = windowsWidth / windowsHeight;\r\n  camera = new THREE.PerspectiveCamera(90, aspect, 0.1, 40000);\r\n  camera.position.set(-3000, 200, 1000);\r\n\r\n  let control = new THREE.OrbitControls(camera, renderer.domElement);\r\n  //   controls.target.set(0, 0, 0);\r\n\r\n  // control.minDistance = 100;\r\n  // control.maxDistance = 200;\r\n  control.update();\r\n\r\n  let materialArrays = [];\r\n  {\r\n    let texture_ft = new THREE.TextureLoader().load(\r\n      `images/skybox1/greenery/meadow_ft.jpg`\r\n    );\r\n    let texture_bk = new THREE.TextureLoader().load(\r\n      `images/skybox1/greenery/meadow_bk.jpg`\r\n    );\r\n    let texture_up = new THREE.TextureLoader().load(\r\n      `images/skybox1/greenery/meadow_up.jpg`\r\n    );\r\n    let texture_dn = new THREE.TextureLoader().load(\r\n      `images/skybox1/greenery/meadow_dn.jpg`\r\n    );\r\n    let texture_rt = new THREE.TextureLoader().load(\r\n      `images/skybox1/greenery/meadow_rt.jpg`\r\n    );\r\n    let texture_lf = new THREE.TextureLoader().load(\r\n      `images/skybox1/greenery/meadow_lf.jpg`\r\n    );\r\n\r\n    materialArrays.push(\r\n      new THREE.MeshBasicMaterial({ map: texture_ft, side: THREE.BackSide })\r\n    );\r\n    materialArrays.push(\r\n      new THREE.MeshBasicMaterial({ map: texture_bk, side: THREE.BackSide })\r\n    );\r\n    materialArrays.push(\r\n      new THREE.MeshBasicMaterial({ map: texture_up, side: THREE.BackSide })\r\n    );\r\n    materialArrays.push(\r\n      new THREE.MeshBasicMaterial({ map: texture_dn, side: THREE.BackSide })\r\n    );\r\n    materialArrays.push(\r\n      new THREE.MeshBasicMaterial({ map: texture_rt, side: THREE.BackSide })\r\n    );\r\n    materialArrays.push(\r\n      new THREE.MeshBasicMaterial({ map: texture_lf, side: THREE.BackSide })\r\n    );\r\n  }\r\n\r\n  scene.add(new THREE.AxesHelper(5000));\r\n  const geometry = new THREE.BoxGeometry(1000, 1000, 1000);\r\n  let skyBox = new THREE.Mesh(geometry, materialArrays);\r\n  // scene.add(skyBox);\r\n\r\n  new THREE.GLTFLoader().load(\"models/iguana/scene.gltf\", (result) => {\r\n    let model = result.scene.children[0];\r\n    model.position.set(100.0, 2.0, -3.0);\r\n    model.traverse((object1) => {\r\n      if (object1.isMesh) {\r\n        object1.castShadow = true;\r\n        object1.receiveShadow = true;\r\n\r\n        if (object1.material.map) {\r\n          object1.material.map.anisotropy = 16;\r\n        }\r\n      }\r\n    });\r\n    // spotLight1.target = model;\r\n    scene.add(model);\r\n    draw();\r\n  });\r\n\r\n  function draw() {\r\n    spotLight1.position.set(\r\n      camera.position.x + 25,\r\n      camera.position.y + 500,\r\n      camera.position.z + 25\r\n    );\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(draw);\r\n  }\r\n}\r\n\r\nmain();\r\n"]}