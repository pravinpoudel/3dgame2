{"version":3,"sources":["client2.js"],"names":["THREE","_interopRequireWildcard","require","_OrbitControls","_GLTFLoader","main","canvas","document","getElementById","WebGLRenderer","Scene","background","Color","aspect","window","innerWidth","innerHeight","camera","renderer","set","OrbitControls","update","windowsWidth","manager","windowsHeight","_loop","model","_Object$values2","_i2","gltfLoader","load","url","value","gltf","name","animations","index","Object","values","models","length","console","controls","pig","init","llama","pug","cow","sheep","zebra","horse","knight","GLTFLoader","_loop2","_Object$values","_i"],"mappings":"8PAAA,IAAAA,MAAAC,wBAAAC,QAAA,gEACAC,eAAAD,QAAA,gFACAE,YAAAF,QAAA,mrBAFA,SAAAG,OAKE,IAAMC,EAASC,SAASC,eAAe,eAJzC,IAAAR,MAAAS,cAAA,CAAAH,OAAAA,KACA,IAAAN,MAAAU,OAOQC,WAAa,IAAIX,MAAMY,MAAM,WAEnC,IAPFC,EAOuBC,OAAOC,WACND,OAAOE,YAPvBV,EAASC,IAAAA,MAASC,kBAAe,GAAAK,EAAvC,GAAA,KACAI,EAAMC,SAAWC,IAAInB,EAAAA,IAAMS,IAA3B,IAAAW,eAAAA,cAAAH,EAAAX,GAEWe,SAGX,IAAMC,EAAY,IAAGR,MAAOC,eAC5BQ,EAAMC,OAGN,YAgDA,WA3Dc,IA2Da,IAAAC,EAAA,WA3Db,IAAAC,EAAAC,EAAAC,GAqDTF,EAAIA,cAAK,GACZG,EAAAA,KAAWC,WAAWC,QAAK,SAAAC,EAACC,GAC1BP,EAAMO,cAAND,EAAAE,MAAAR,EAAAO,KAAAE,WAAAC,MAvDUR,EAAA,EAAAD,EAAAU,OAAAC,OAAAC,GAAAX,EAAAD,EAAAa,OAAAZ,IAAAH,KAYdR,GAEAwB,QAAMC,IAAQ,eA8BL,IA1BTnB,IAAAA,EAAA,CAQEoB,IAAK,CANPZ,IAASa,6EAEPH,IAAAA,CACDV,IAAA,6EAEDc,MAAMN,CACJI,IAAK,+EAAAG,IADQ,CAIbC,IAAK,6EAAAC,MAJQ,CAObH,IAAO,+EAAAI,MAPM,CAUbH,IAAK,+EAAAI,MAVQ,CAabF,IAAO,+EAAAG,OAbM,CAgBbF,IAAO,yFAILlB,EAAK,IAAAqB,YAAAA,WAAA7B,GAjDX8B,EAAA,WA6BiB,IAAA3B,EAAA4B,EAAAC,GAsBbJ,EAAQrB,KAAAJ,EAAAK,IAAA,SAAAE,GACNF,EAAKE,KAAAA,KAJAsB,EAAA,EAAAD,EAnBMjB,OAAAC,OAAAC,GAmBNgB,EAAAD,EAAAd,OAAAe,IAnBMF,IAgCdhD","file":"client2.min.js","sourcesContent":["import * as THREE from \"https://cdn.skypack.dev/three@0.128.0/build/three.module.js\";\r\nimport { OrbitControls } from \"https://cdn.skypack.dev/three@0.128.0/examples/jsm/controls/OrbitControls.js\";\r\nimport { GLTFLoader } from \"https://cdn.skypack.dev/three/examples/jsm/loaders/GLTFLoader.js\";\r\n\r\nfunction main() {\r\n  const canvas = document.getElementById(\"main-canvas\");\r\n  const renderer = new THREE.WebGLRenderer({ canvas });\r\n\r\n  const scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(\"#aaaaaa\");\r\n\r\n  const windowsWidth = window.innerWidth;\r\n  const windowsHeight = window.innerHeight;\r\n\r\n  const aspect = windowsWidth / windowsHeight;\r\n  let camera = new THREE.PerspectiveCamera(90, aspect, 0.1, 40000);\r\n  camera.position.set(0, 1.5, 20);\r\n\r\n  const controls = new OrbitControls(camera, canvas);\r\n  controls.update();\r\n\r\n  const manager = new THREE.LoadingManager();\r\n  manager.onLoad = init;\r\n\r\n  function init() {\r\n    manageAnimation();\r\n    console.log(\"all loaded\");\r\n  }\r\n\r\n  const models = {\r\n    pig: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Pig.gltf\",\r\n    },\r\n    cow: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Cow.gltf\",\r\n    },\r\n    llama: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Llama.gltf\",\r\n    },\r\n    pug: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Pug.gltf\",\r\n    },\r\n    sheep: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Sheep.gltf\",\r\n    },\r\n    zebra: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Zebra.gltf\",\r\n    },\r\n    horse: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/animals/Horse.gltf\",\r\n    },\r\n    knight: {\r\n      url: \"https://threejsfundamentals.org/threejs/resources/models/knight/KnightCharacter.gltf\",\r\n    },\r\n  };\r\n\r\n  let gltfLoader = new GLTFLoader(manager);\r\n  for (let model of Object.values(models)) {\r\n    gltfLoader.load(model.url, (gltf) => {\r\n      model.gltf = gltf;\r\n    });\r\n  }\r\n\r\n  function manageAnimation() {\r\n    for (const model of Object.values(models)) {\r\n      model.animationClip = {};\r\n      model.gltf.animations.forEach((value, index) => {\r\n        model.animationClip[value.name] = model.gltf.animations[index];\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nmain();\r\n"]}